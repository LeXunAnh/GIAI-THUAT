//#include <iostream>
//
//using namespace std;
//
//struct Node
//{
//	int value;
//	Node *next;
//};
//
//void init(Node *&head)
//{
//	head = nullptr;
//}
//
//Node *createNode(int x)
//{
//	Node *p = new Node;
//	p->value = x;
//	p->next = nullptr;
//
//	return p;
//}
//
//bool isEmpty(Node *head)
//{
//	return head == nullptr;
//}
//
//void addHead(Node *&head, int x)
//{
//	Node *p = createNode(x);
//	p->next = head;
//	head = p;
//}
//
//void addTail(Node *&head, int x)
//{
//	Node *p = createNode(x);
//	if (isEmpty(head) == true)
//		head = p;
//	else
//	{
//		Node *tail = head;
//		while (tail->next != nullptr)
//			tail = tail->next;
//		tail->next = p;
//	}
//}
//
//void output(Node *head)
//{
//	Node *p = head;
//	while (p != nullptr)
//	{
//		cout << p->value << "\t";
//		p = p->next;
//	}
//
//	cout << endl;
//}
//
//Node* find(Node *head, int x)
//{
//	Node *p = head;
//	while (p != nullptr)
//	{
//		if (p->value == x)
//			return p;
//
//		p = p->next;
//	}
//
//	return nullptr;
//}
//
//Node* findMax(Node *head)
//{
//	Node *max = createNode(INT_MIN);
//	Node *p = head;
//	while (p != nullptr)
//	{
//		if (p->value > max->value)
//			max = p;
//
//		p = p->next;
//	}
//
//	return max;
//}
//
//bool isIncrease(Node *head)
//{
//	if (isEmpty(head) == true || head->next == nullptr)
//		return true;
//
//	Node *pre = head;
//	Node *p = pre->next;
//
//	while (p != nullptr)
//	{
//		if (pre->value > p->value)
//			return false;
//		
//		pre = p;
//		p = pre->next;
//	}
//
//	return true;
//}
//
//int main()
//{
//	Node *head;
//	init(head);
//
//	/*addHead(head, 10);
//	addHead(head, 15);
//	addHead(head, 30);
//	addTail(head, 100);
//	addHead(head, 5);
//	addHead(head, 60);*/
//	addTail(head, 40);
//	addTail(head, 50);
//	addTail(head, 30);
//	addTail(head, 90);
//
//	output(head);
//
//	Node *r = find(head, 999);
//	if (r == nullptr)
//		cout << "KHONG\n";
//	else
//		cout << "CO\n";
//
//	Node *m = findMax(head);
//	cout << "Max = " << m->value << endl;
//
//	if (isIncrease(head) == true)
//		cout << "TANG\n";
//	else
//		cout << "KHONG TANG\n";
//
//	system("pause");
//
//	return 0;
//}
