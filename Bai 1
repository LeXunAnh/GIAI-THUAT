#include<iostream>
using namespace std;

struct Node
{
	int value;
	Node *next;
};

void inNode(Node *&head)
{
	head = nullptr;
}

Node *CreateNode(int x)
{
	Node *p = new Node;
	p->value = x;
	p->next = nullptr;
	return p;
}

void AddHead(Node *&head, int x)
{
	Node *p = CreateNode(x);
	p->next = head;
	head = p;
}

void Output(Node *&head)
{
	Node *p = head;
	while (p != nullptr)
	{
		cout << p->value << "\t";
		p = p->next;
	}
	cout << endl;
}

void AddFirst(Node *&head,int x)
{
	Node *p = new Node;
	p->value = x;
	p->next = head;
	head = p;
}

void AddLast(Node *&head, int x)
{
	Node *p = new Node;
	p->value = x;
	p->next = nullptr;
	if (head == nullptr)
		head = p;
	else
	{
		Node*q = head;
		while (q->next != nullptr)
			q = q->next;
		q->next = p;
	}
}

Node *Find(Node *&head,int x)
{
	Node *p = head;
	while (p != nullptr)
	{
		if (p->value == x)
			return p;
		p = p->next;
	}
	return nullptr;
}

Node *FindMax(Node *&head)
{
	Node *max = CreateNode(INT_MIN);
	Node *p = head;
	while (p != nullptr)
	{
		if (p->value > max->value)
			max = p;
		p = p->next;
	}
	return max;
}

bool Increase(Node *&head)
{
	Node *pre = head;
	Node *p = pre->next;
	while (p != nullptr)
	{
		if (pre->value < p->value)
			return false;
		else
		{
			pre = p;
			p = pre->next;
		}
	}
	return true;
}

int main()
{
	Node *head;
	inNode(head);
	AddHead(head, 10);
	AddHead(head, 40);
	AddHead(head, 50);
	AddHead(head, 80);
	AddHead(head, 90);
	AddFirst(head, 100);
	AddFirst(head, 200);
	Output(head);
	Node *a = Find(head, 60);
	if (a == nullptr)
		cout << "Khong" << endl;
	else
		cout << "Co" << endl;
	Node *b = FindMax(head);
	cout << "Max = " << b->value << endl;
	if (Increase(head) == true)
		cout << "Tang dan" << endl;
	else
		cout << "Khong tang" << endl;
	system("pause");
	return 0;
}
